apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: datadog-agent
spec:
  selector:
    matchLabels:
      name: datadog-agent
  template:
    metadata:
      name: datadog-agent
      labels:
        name: datadog-agent
    spec:
      serviceAccountName: datadog-agent
      containers:
      - name: datadog-agent
        image: datadog/agent:latest
        imagePullPolicy: Always
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "256m"
        securityContext:
          capabilities:
            add: ["SYS_ADMIN", "SYS_RESOURCE", "SYS_PTRACE", "NET_ADMIN", "IPC_LOCK"]
        ports:
          - containerPort: 8125
            hostPort: 8125
            name: dogstatsdport
            protocol: UDP
          - containerPort: 8126
            hostPort: 8126
            name: traceport
            protocol: TCP
        env:
          - name: DD_API_KEY
            valueFrom:
              secretKeyRef:
                name: datadog-secret
                key: api-key
          - name: KUBERNETES
            value: "true"
          - name: DD_EXTRA_CONFIG_PROVIDERS
            value: "clusterchecks endpointschecks"
          - name: DD_KUBERNETES_KUBELET_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: DD_APM_ENABLED
            value: "true"
          - name: DD_PROCESS_AGENT_ENABLED
            value: "true"
          - name: DD_APM_NON_LOCAL_TRAFFIC
            value: "true"
          - name: DD_DOGSTATSD_NON_LOCAL_TRAFFIC
            value: "true"
          - name: DD_LOGS_ENABLED
            value: "true"
          - name: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL
            value: "true"
          - name: DD_LOGS_CONFIG_K8S_CONTAINER_USE_FILE
            value: "true"
          - name: DD_SYSTEM_PROBE_ENABLED
            value: "true"
          - name: DD_SYSPROBE_SOCKET
            value: "/var/run/s6/sysprobe.sock"
          - name: DD_KUBERNETES_NODE_LABELS_AS_TAGS
            value: |-
              {
                "cni.projectcalico.org/podIP": "podIP"

              }
          - name: DD_KUBERNETES_POD_LABELS_AS_TAGS
            value: |-
              {
                "ca.pipsquack/subdomain": "where"

              }
          - name: DD_TAGS
            value: "yafernandes/k8s-cluster creator:alex.fernandes env:env:k8s-cluster"
        volumeMounts:
          - name: dockersocket
            mountPath: /var/run/docker.sock
          - name: logpodpath
            mountPath: /var/log/pods
          - name: logcontainerpath
            mountPath: /var/lib/docker/containers
          - name: procdir
            mountPath: /host/proc
            readOnly: true
          - name: cgroups
            mountPath: /host/sys/fs/cgroup
            readOnly: true
          - name: pointerdir
            mountPath: /opt/datadog-agent/run
          - name: debugfs
            mountPath: /sys/kernel/debug
          - name: dd-confd
            mountPath: /conf.d
          - mountPath: /etc/kubernetes/pki/etcd
            name: etcd-certs
          - mountPath: /etc/datadog-agent/conf.d/etcd.d
            name: empty-dir
        livenessProbe:
          exec:
            command:
              - ./probe.sh
          initialDelaySeconds: 15
          periodSeconds: 5
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: "Exists"
          effect: NoSchedule
      volumes:
        - name: dockersocket
          hostPath:
            path: /var/run/docker.sock
        - hostPath:
            path: /var/log/pods
          name: logpodpath
        - hostPath:
            path: /var/lib/docker/containers
          name: logcontainerpath
        - name: procdir
          hostPath:
            path: /proc
        - name: cgroups
          hostPath:
            path: /sys/fs/cgroup
        - name: pointerdir
          hostPath:
            path: /opt/datadog-agent/run
        - name: debugfs
          hostPath:
            path: /sys/kernel/debug
        - name: dd-confd
          configMap:
            name: dd-agent-confd
        - name: etcd-certs
          hostPath:
            path: /etc/kubernetes/pki/etcd
            type: DirectoryOrCreate
        - name: empty-dir
          emptyDir: {}